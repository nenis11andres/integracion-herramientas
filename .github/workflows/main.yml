name: Deploy Jenkins with Terraform

on:
  push:
    branches:
      - main  # Ejecutará el workflow cuando se haga un push a la rama 'main'

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Este paso obtiene el código de tu repositorio

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.0  # Especifica la versión de Terraform que deseas usar

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Usar el secreto AWS_ACCESS_KEY_ID
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Usar el secreto AWS_SECRET_ACCESS_KEY
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Usar el secreto AWS_SESSION_TOKEN
        aws-region: us-east-1  # Asegúrate de que la región coincida con tu configuración de Terraform

    - name: Initialize Terraform
      run: terraform init  # Inicializa Terraform
      working-directory: ./terraform  # Especifica que el comando debe ejecutarse en la carpeta 'terraform'

    - name: Apply Terraform
      run: terraform apply -auto-approve  # Aplica la configuración de Terraform sin solicitar confirmación
      working-directory: ./terraform  # Especifica que el comando debe ejecutarse en la carpeta 'terraform'

    - name: Get Jenkins public IP
      id: jenkins_ip
      run: |
        JENKINS_PUBLIC_IP=$(terraform output -raw jenkins_url | sed 's/http:\/\///' | sed 's/:8080//')  # Elimina http:// y el puerto
        echo "JENKINS_PUBLIC_IP=$JENKINS_PUBLIC_IP" >> $GITHUB_ENV  # Establece la IP como variable de entorno
      working-directory: ./terraform  # Especifica que el comando debe ejecutarse en la carpeta 'terraform'

    - name: Output Jenkins URL
      run: |
        echo "Jenkins is available at: http://${{ env.JENKINS_PUBLIC_IP }}:8080"  # Muestra la URL de Jenkins
